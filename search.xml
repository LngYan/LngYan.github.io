<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello 博客</title>
    <url>/2023/01/10/Hello%20Blog/</url>
    <content><![CDATA[<p>我是初来的初学者，请多多指教！</p>
<p>这是我的第一篇博客。</p>
<p>记录下我的目标希望在回首看到这篇文章的时候我已经达成目标！</p>
<h3 id="高级数据分析师"><a class="markdownIt-Anchor" href="#高级数据分析师"></a> 高级数据分析师</h3>
<p>踏入数据分析的队伍是因为能对未来数据进行预测是一个很有意思的挑战。后来，我直接报了个班，花了半年时间系统学习了数据分析的基础理解了数据采集、数据清洗、数据分析、数据挖掘的方方面面，在对数据分析的深层次的了解后，认识到数据分析是展现价值，而数据的深层挖掘预测出的结果是通过相关的算法计算并且依靠机器学习不优化学习出来所以说算法及机器学习才是核心，数据是计算的基础。所以现阶段对于数据分析的目标是熟悉业务数据分析并且学习数据挖掘等各个计算基础等进一步提高自己的相关知识能力，在未来可以依靠自己的能力立足。</p>
<h3 id="做一个十万粉up主"><a class="markdownIt-Anchor" href="#做一个十万粉up主"></a> 做一个十万粉up主</h3>
<p>B站刚开始建站的时候我就注册了一个账号，一直用到现在，看着B站的起起落落，以前12dore团队不亦乐乎的MC整活在到纯黑、陆夫人、黑桐谷歌的各种游戏解说都是我小时候的乐趣，也是我想做UP主的一个起因，可我依旧没有规划好我该往那个方向（区）发展，感觉我什么都想做但是没都做不好，冷焱的出现就是最好的例子，所以我挺对不起冷焱的，想给他丰富的一生却法将精力全部投入，现在想做的事情和我的精力以及资金完全相反，我会一步一步的将这个目标敲定！</p>
<p>最后，就是对未来事业的遐想。对于最想进的大厂我还没有具体详细地去了解过，如果可以我希望自己可以成立一个小型企业，邀请一些志同道合地人来尽情地发挥自己的想象动用自己的能力。</p>
<p>最后最后，你要相信自己一定能行！</p>
]]></content>
      <categories>
        <category>blog</category>
        <category>target</category>
      </categories>
      <tags>
        <tag>初学者</tag>
        <tag>静态HTML</tag>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 搭建入门</title>
    <url>/2023/01/31/Hexo%20%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%89%80%E8%B5%B0%E8%BF%87%E7%9A%84%E5%9D%91/</url>
    <content><![CDATA[<h2 id="前沿"><a class="markdownIt-Anchor" href="#前沿"></a> 前沿</h2>
<h3 id="为何搭建博客"><a class="markdownIt-Anchor" href="#为何搭建博客"></a> 为何搭建博客</h3>
<p>建立博客的想法是在学习中一位老师推荐的，后来，随着个人知识面的拓展和深入，发现有太多的知识和经验值得沉淀和交流，在某年没有回家过春节的时候沉下心来搭建了一个博客，算是自己有一个回顾复盘的地方了吧。</p>
<p>另外，根据“学习金字塔”理论（Edgar Dale，1946），<strong>对知识进行演示、实践和传授能够显著提升学习保持率</strong>，而沉淀为博客或视频正是这样一种形式，我认为一方面可以让无形的知识转为有形的博客，便于之后复习和追溯，另一方面通过沉淀转化可以提高我对知识的记忆和掌握水平。</p>
<h3 id="建设原理"><a class="markdownIt-Anchor" href="#建设原理"></a> 建设原理</h3>
<p>博客自然是重内容，轻形式，主要重心点放在内容上，仅保留少量的交流功能即可。</p>
<p>这里我使用 <a href="https://hexo.io/">Hexo</a> 框架搭建博客，该框架基于 <a href="https://nodejs.org/zh-cn/">Node.js</a> ，使用者不需要掌握 node 原理，<a href="https://hexo.io/">Hexo</a> 会根据配置项中预设好的模板自动将内容转换为静态页面。</p>
<p>Hexo 提供了多种形式的主题：这里我选用的是 <a href="https://github.com/Fechin/hexo-theme-diaspora">Diaspora</a>。该主题较为贴近我对博客美观性的要求，且原生支持一系列配置项和插件，能满足我的需要。</p>
<p>虽然我有自己的NAS，但是为了提高其可用性，我还是白嫖了 GitHub Pages 服务，将 Hexo 生成的静态页面部署上去，从而可以让大家访问。</p>
<h2 id="基础环境安装"><a class="markdownIt-Anchor" href="#基础环境安装"></a> 基础环境安装</h2>
<h3 id="安装-nodejs"><a class="markdownIt-Anchor" href="#安装-nodejs"></a> 安装 Node.js</h3>
<p>直接到官网上下载安装即可https://nodejs.org/en/download/</p>
<ul>
<li>Node.js (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)</li>
<li>Node自带npm</li>
</ul>
<p>安装完成后在终端运行如下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ node -v</span><br><span class="line">$ npm  -v</span><br></pre></td></tr></table></figure>
<p>如果正常响应对应版本号，则说明安装及环境变量配置成功。</p>
<h3 id="安装git"><a class="markdownIt-Anchor" href="#安装git"></a> 安装Git</h3>
<p>安装Git需要用到安装器，我电脑上已安装HomeBrew所以可以直接安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">brew install git   // 安装Git</span><br></pre></td></tr></table></figure>
<p>也可以下载<a href="https://sourceforge.net/projects/git-osx-installer/">安装程序</a>来安装</p>
<h3 id="安装-hexo"><a class="markdownIt-Anchor" href="#安装-hexo"></a> 安装 Hexo</h3>
<p>使用 npm（node 的包管理器，可以类比 python 的 pip）可以直接安装 Hexo。在终端输入如下命令开始安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo npm install hexo-cli -g</span><br></pre></td></tr></table></figure>
<p>检查是否安装正常。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure>
<p>安装后就可以开始配置了，选择一个本地文件夹作为博客的目录，终端切换到该目录下，初始化该目录并加载目录路径：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ cd &lt;folder&gt;</span><br></pre></td></tr></table></figure>
<p>成功运行后，即可使用 hexo 的命令对该目录进行操作了</p>
<p><img src="/images/pasted-1.png" alt="upload successful" /><br />
运行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>即可从本地运行博客服务器。浏览器打开终端提示的页面(默认为 <a href="https://localhost:4000">https://localhost:4000</a>)，即可查看。</p>
<p>默认页面为内置的 <a href="http://hello-world.md">hello-world.md</a> 文档。至此我们已经完成了 <a href="https://hexo.io/zh-cn/">Hexo</a>的安装，如要了解更多配置项可参考<a href="https://hexo.io/zh-cn/api/">Configuration | Hexo</a>，要了解更多 Hexo 命令可参考 <a href="https://hexo.io/zh-cn/api/">Commands | Hexo</a>。</p>
<h3 id="主题安装"><a class="markdownIt-Anchor" href="#主题安装"></a> 主题安装</h3>
<p>为了使博客不太难看，我们需要安装一个主题就拿我目前用的<a href="https://github.com/Fechin/hexo-theme-diaspora">Diaspora</a>主题来举例，进入安装Hexo目录，安装主题：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cd &lt;folder&gt;</span><br><span class="line">$ git clone https://github.com/Fechin/hexo-theme-diaspora.git themes/diaspora</span><br></pre></td></tr></table></figure>
<p>安装完成后在theme文件夹内会多出一个名为Diaspora(刚刚安装的主题）文件夹就说明安装成功了<br />
接下来启动和设置主题，修改Hexo配置文件 <code>_config.yml</code> 主题项设置为diaspora</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">theme: diaspora</span><br></pre></td></tr></table></figure>
<p>如何设置主题可以在<a href="https://github.com/Fechin/hexo-theme-diaspora">Diaspora</a>里查询</p>
<p>注意：请在更时主题时备份 <code>_config.yml</code>配置文件</p>
<p>配置好主题后重新启动hexo你的博客就更新为你设置的主题啦</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure>
<p>当然Hexo还有非常多的主题供你选择。</p>
<h3 id="写文章"><a class="markdownIt-Anchor" href="#写文章"></a> 写文章</h3>
<p>所有基础框架都已经创建完成，接下来可以开始写你的第一篇博客了<br />
在<code>/source/_posts</code>下创建你的第一个博客吧，例如，创建一个名为<code>FirstNight.md</code>的文件，用Markdown大肆发挥吧，注意保存。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: First Night</span><br><span class="line">---</span><br><span class="line">&gt; 我有一头**小毛驴**，可是我从来都不骑。</span><br></pre></td></tr></table></figure>
<h2 id="发布"><a class="markdownIt-Anchor" href="#发布"></a> 发布</h2>
<p>测试没问题后，我们就生成静态网页文件发布至我们的Github pages 中或者自己的服务器上，国内的话可以发布到<a href="https://gitee.com/">gitee</a>上访问会快一些，毕竟git是国外网站，懂得都懂。<br />
<strong>在线发布</strong><br />
首先自己先注册个账号，注册过程可能需要验证你的邮箱，其他就不在赘述。</p>
<p>配置 Github 仓库：</p>
<p>需要创建一个仓库(repository) 来存储我们的网站，点击首页任意位置出现的 New repository按钮创建仓库, Respository name 中的<code>username.github.io</code>的username 一定与前面的Owner 一致，记住你的<code>username</code>下面会用到。</p>
<p><img src="/images/pasted-2.png" alt="upload successful" /></p>
<p>将 Hexo 文件夹中的文件 push 到储存库的默认分支，默认分支通常名为 main，旧一点的储存库可能名为 master。</p>
<ul>
<li>将 <strong>main</strong> 分支 push 到 GitHub：</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git push -u origin main</span><br></pre></td></tr></table></figure>
<ul>
<li>默认情况下 public/ 不会被上传(也不该被上传)，确保 .gitignore 文件中包含一行 public/。整体文件夹结构应该与 范例储存库 大致相似。</li>
</ul>
<p>使用 node --version 指令检查你电脑上的 Node.js 版本，并记下该版本 (例如：<code>v16.y.z</code>)<br />
在储存库中建立 <code>.github/workflows/pages.yml</code>（特别注意路径我就踩过坑把文件存在了根目录下），并填入以下内容 (将 16 替换为上个步骤中记下的版本)：</p>
<pre class="highlight"><code class="yml"><span class="hljs-string">.github/workflows/pages.yml</span>

<span class="hljs-attr">name:</span> <span class="hljs-string">Pages</span>
<span class="hljs-attr">on:</span>
  <span class="hljs-attr">push:</span>
    <span class="hljs-attr">branches:</span>
      <span class="hljs-bullet">-</span> <span class="hljs-string">main</span> <span class="hljs-comment"># default branch</span>
<span class="hljs-attr">jobs:</span>
  <span class="hljs-attr">pages:</span>
    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span>
    <span class="hljs-attr">steps:</span>
      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v2</span>
      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Use</span> <span class="hljs-string">Node.js</span> <span class="hljs-number">16.</span><span class="hljs-string">x</span>
        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@v2</span>
        <span class="hljs-attr">with:</span>
          <span class="hljs-attr">node-version:</span> <span class="hljs-string">"16"</span>
      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Cache</span> <span class="hljs-string">NPM</span> <span class="hljs-string">dependencies</span>
        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/cache@v2</span>
        <span class="hljs-attr">with:</span>
          <span class="hljs-attr">path:</span> <span class="hljs-string">node_modules</span>
          <span class="hljs-attr">key:</span> <span class="hljs-string">$&#123;&#123; runner.OS &#125;&#125;-npm-cache</span>
          <span class="hljs-attr">restore-keys:</span> <span class="hljs-string">|
            $&#123;&#123; runner.OS &#125;&#125;-npm-cache
</span>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Install</span> <span class="hljs-string">Dependencies</span>
        <span class="hljs-attr">run:</span> <span class="hljs-string">npm</span> <span class="hljs-string">install</span>
      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Build</span>
        <span class="hljs-attr">run:</span> <span class="hljs-string">npm</span> <span class="hljs-string">run</span> <span class="hljs-string">build</span>
      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span>
        <span class="hljs-attr">uses:</span> <span class="hljs-string">peaceiris/actions-gh-pages@v3</span>
        <span class="hljs-attr">with:</span>
          <span class="hljs-attr">github_token:</span> <span class="hljs-string">$&#123;&#123; secrets.GITHUB_TOKEN &#125;&#125;</span>
          <span class="hljs-attr">publish_dir:</span> <span class="hljs-string">./public</span>
</code></pre>
<p>当部署作业完成后，产生的页面会放在储存库中的 gh-pages 分支。<br />
在储存库中前往 Settings &gt; Pages &gt; Source，并将 branch 改为 gh-pages。</p>
<p><img src="/images/pasted-3.png" alt="upload successful" /></p>
<p>过几分钟后，访问上方的网站，就可以看见你博客就搭建成功啦！</p>
<h2 id="更多"><a class="markdownIt-Anchor" href="#更多"></a> 更多</h2>
<p><a href="https://hexo.io/themes/">更多主题</a><br />
<a href="https://hexo.io/plugins/">更多插件</a></p>
]]></content>
      <categories>
        <category>Hexo</category>
        <category>blog</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>个人网站</tag>
      </tags>
  </entry>
  <entry>
    <title>了解chatGPT</title>
    <url>/2023/02/12/%E4%BA%86%E8%A7%A3%E7%88%86%E7%81%AB%E7%9A%84chatGPT/</url>
    <content><![CDATA[<p>近期chatGPT刷爆的所有人的首页、社交平台、朋友圈，如此火爆的背后是人工智能发展出萌芽的第一步，所以我也去网上收集了许多资料，会在这里分享给大家。</p>
<p>图片6</p>
<h2 id="chatgpt是什么"><a class="markdownIt-Anchor" href="#chatgpt是什么"></a> 【ChatGPT是什么？】</h2>
<p>首先，ChatGPT 是由OpenAI公司在2022年11月30日发布的一种聊天机器人模型，是由人工智能技术驱动的自然语言处理工具，其中 Chat 就是聊天。当然不是像小爱同学、siri等智能家居系统这样简单的回答以及完型填空，chatGPT更像是回答你出的命题作文一样进行写作。</p>
<p>然后重点是后面的 <strong>【GPT】</strong> ，即 <strong>Generative Pre-trained Transformer</strong> ，中文叫 <strong>“生成型预训练变换模型”</strong>。<br />
<img src="/images/chatGPT7.jpg" alt="img" /><br />
简单来说，ChatGPT就像我们手机上的一款APP，不同之处在于，他能学习和理解人类的语言，还能根据上下文的语境进行反应，真正像人一样和你进行交流，同时他一门应用不是技术，并且chatGPT最重要的不是技术而是工程。</p>
<p>不仅仅只是聊天的chatGPT还能：</p>
<ul>
<li>[√] 写代码、修bug</li>
<li>[√] 设计装修图</li>
<li>[√] 写剧本，写论文</li>
<li>[√] 解析物理题<br />
如果你的提问当中出现明显的错误，他还会纠正你。</li>
</ul>
<h2 id="chatgpt的由来"><a class="markdownIt-Anchor" href="#chatgpt的由来"></a> 【chatGPT】的由来</h2>
<p>2017年，谷歌大脑团队（Google Brain）在神经信息处理系统大会（NeurIPS，该会议为机器学习与人工智能领域的顶级学术会议）发表了一篇名为“Attention is all you need”（自我注意力是你所需要的全部）的论文。作者在文中首次提出了基于自我注意力机制（self-attention）的变换器（transformer）模型，并首次将其用于理解人类的语言，即自然语言处理。</p>
<p>在这篇文章面世之前，自然语言处理领域的主流模型是循环神经网络（RNN，recurrent neural network）。循环神经网络模型的优点是，能更好地处理有先后顺序的数据，比如语言，但也因为如此，这种模型在处理较长序列，例如长文章、书籍时，存在模型不稳定或者模型过早停止有效训练的问题（这是由于模型训练时的梯度消失或梯度爆炸现象而导致，在此不具体展开），以及训练模型时间过长（因必须顺序处理数据，无法同时并行训练）的问题。</p>
<p>2015年12月，OpenAI公司美国旧金山成立。特斯拉的创始人马斯克也是该公司创始人之一，为公司早期提供了资金支持（后来他从该公司退出，但保留了金主身份，并未撤资）。成立早期，OpenAI是一家非营利组织，以研发对人类社会有益、友好的人工智能技术为使命。2019年，OpenAI改变了其性质，宣布成为营利机构，这个改变与Transformer模型不无相关。</p>
<p>2018年，在Transformer模型诞生还不到一年的时候，OpenAI公司发表了论文“Improving Language Understanding by Generative Pre-training”（用创造型预训练提高模型的语言理解力）（Generative一般译为“生成型”，但我认为译为“创造型”更合适），推出了具有1.17亿个参数的GPT-1（Generative Pre-training Transformers, 创造型预训练变换器）模型。这是一个用大量数据训练好的基于Transformer结构的模型。他们使用了经典的大型书籍文本数据集（BookCorpus）进行模型预训练。该数据集包含超过7000本从未出版的书，类型涵盖了冒险、奇幻、言情等类别。在预训练之后，作者针对四种不同的语言场景、使用不同的特定数据集对模型进行进一步的训练（又称为微调，fine-tuning）。最终训练所得的模型在问答、文本相似性评估、语义蕴含判定、以及文本分类这四种语言场景，都取得了比基础Transformer模型更优的结果，成为了新的业内第一。<br />
<img src="/images/chatGPT1.jpg" alt="img" /></p>
<p>2019年，该公司公布了一个具有15亿个参数的模型：GPT-2。该模型架构与GPT-1原理相同，主要区别是GPT-2的规模更大（10倍）。同时，他们发表了介绍这个模型的论文“Language Models are Unsupervised Multitask Learners” （语言模型是无监督的多任务学习者）。在这项工作中，他们使用了自己收集的以网页文字信息为主的新的数据集。不出意料，GPT-2模型刷新了大型语言模型在多项语言场景的评分记录。在文中，他们提供了GPT-2模型回答新问题（模型训练数据中未出现过的问题及其答案）的结果。</p>
<p>2020年，这个创业团队再次战胜自己，发表论文“Language Models are Few-ShotLearner”（语言模型是小样本学习者），并推出了最新的GPT-3模型——它有1750亿个参数。GPT-3模型架构与GPT-2没有本质区别，除了规模大了整整两个数量级以外。GPT-3的训练集也比前两款GPT模型要大得多：经过基础过滤的全网页爬虫数据集（4290亿个词符）、维基百科文章（30亿词符）、两个不同的书籍数据集（一共670亿词符）。</p>
<p>由于巨大的参数数目以及训练所需数据集规模，训练一个GPT-3模型保守估计需要五百万美元至两千万美元不等——如果用于训练的GPU越多，成本越高，时间越短；反之亦然。可以说，这个数量级的大型语言模型已经不是普通学者、一般个人能负担得起研究项目了。面对如此庞大的GPT-3模型，用户可以仅提供小样本的提示语、或者完全不提供提示而直接询问，就能获得符合要求的高质量答案。小样本提示是指用户在提问时先给模型提供几个例子，然后再提出自己的语言任务（翻译、创作文本、回答问题等）。</p>
<p><img src="/images/chatGPT2.jpg" alt="img" /></p>
<p>GPT-3模型面世时，未提供广泛的用户交互界面，并且要求用户提交申请、申请批准后才能注册，所以直接体验过GPT-3模型的人数并不多。根据体验过的人们在网上分享的体验，我们可以知道GPT-3可以根据简单的提示自动生成完整的、文从字顺的长文章，让人几乎不能相信这是机器的作品。GPT-3还会写程序代码、创作菜谱等几乎所有的文本创作类的任务。早期测试结束后，OpenAI公司对GPT-3模型进行了商业化：付费用户可以通过应用程序接口（API）连上GPT-3，使用该模型完成所需语言任务。2020年9月，微软公司获得了GPT-3模型的独占许可，意味着微软公司可以独家接触到GPT-3的源代码。该独占许可不影响付费用户通过API继续使用GPT-3模型。</p>
<p>2022年3月，OpenAI再次发表论文“Training language models to follow instructions with human feedback”（结合人类反馈信息来训练语言模型使其能理解指令），并推出了他们基于GPT-3模型并进行了进一步的微调的InstructGPT模型。InstructGPT的模型训练中加入了人类的评价和反馈数据，而不仅仅是事先准备好的数据集。</p>
<p>GPT-3公测期间用户提供了大量的对话和提示语数据，而OpenAI公司内部的数据标记团队也生成了不少人工标记数据集。这些标注过的数据（labelled data），可以帮助模型在直接学习数据的同时学习人类对这些数据的标记（例如某些句子、词组是不好的，应尽量少使用）。</p>
<p>OpenAI公司第一步先用这些数据对GPT-3用监督式训练（supervised learning）进行了微调。</p>
<p>第二步，他们收集了微调过的模型生成的答案样本。一般来说，对于每一条提示语，模型可以给出无数个答案，而用户一般只想看到一个答案（这也是符合人类交流的习惯），模型需要对这些答案排序，选出最优。所以，数据标记团队在这一步对所有可能的答案进行人工打分排序，选出最符合人类思考交流习惯的答案。这些人工打分的结果可以进一步建立奖励模型——奖励模型可以自动给语言模型奖励反馈，达到鼓励语言模型给出好的答案、抑制不好的答案的目的，帮助模型自动寻出最优答案。</p>
<p>第三步，该团队使用奖励模型和更多的标注过的数据继续优化微调过的语言模型，并且进行迭代。最终得到的模型被称为InstructGPT。</p>
<p><img src="/images/chatGPT4.jpg" alt="img" /><br />
<img src="/images/chatGPT3.jpg" alt="img" /></p>
<h2 id="chagpt的商业价值"><a class="markdownIt-Anchor" href="#chagpt的商业价值"></a> 【ChaGPT的商业价值】</h2>
<p>在Open AI公司推出chatGPT程序之后，国内外的科技巨头都坐不住了：</p>
<ul>
<li>谷歌：自己也将推出同类型的AI聊天机器人；</li>
<li>苹果：马上通过彭博社宣布，将在近期举行AI峰会；</li>
<li>百度：正式官宣了公司类chatGPT项目“文心一言”，可以说是国内在人工智能领域技术积淀最深的企业；</li>
<li>阿里巴巴：阿里达摩院研发的类似对话机器人，已经在开放给内部员工进行内测的阶段；<br />
…</li>
</ul>
<p>说到底，ChatGPT本身是一个现象，现象背后的人工智能趋势，才是真正最重要的。</p>
<p>科技巨头们急了，是因为他们深怕错过了这一波人工智能浪潮的红利。</p>
<p>OpenAI推出ChatGPT付费订阅版ChatGPTPlus，每月收费20美元，开启产品走向商业化变现道路。</p>
<p>随着智能客服、教育、医疗、搜索引擎等应用领域不断落地，ChatGPT将与各行业应用结合后，更多付费商业模式即将落地AI人工智能的赛道将变的越来越壮大。</p>
<p>这里不得不提到AIGC，即人工智能生成内容，ChatGPT、AI 绘画、AI数字虚拟人、AI智能客服等都是AIGC的范畴，将是未来人工智能的重要发展方向。<br />
<img src="/images/chatGPT8.jpg" alt="img" /></p>
<p>ChatGPT能够促使AIGC快速商业化发展，预示着自然语言处理（NLP）技术有望迅速进入平民化应用时代，应用场景不断拓宽…</p>
<p>所以ChatGPT的一小步，是AI的一大步!</p>
<p>ChatGPT也引发了很多人的焦虑和失业危机：</p>
<blockquote>
<p>① 简单的数据处理和录入工作者；<br />
② 简单的客服工作者；<br />
③ 简单的金融分析和记账工作者；<br />
④ 重复性高的生产线工作；</p>
</blockquote>
<p>当然，有些岗位可能会因此得到提升，例如:</p>
<blockquote>
<p>① 人工智能开发人员;<br />
② 数据分析师;<br />
③ 自动化工程师;<br />
④ 用户体验设计师等。</p>
</blockquote>
<p>以及在2023年2月出台的规范使用，媒体报道称，欧盟负责内部市场的委员蒂埃里·布雷东日前就“聊天生成预训练转换器”发表评论说，这类人工智能技术可能为商业和民生带来巨大的机遇，但同时也伴随着风险，因此欧盟正在考虑设立规章制度，以规范其使用，确保向用户提供高质量、有价值的信息和数据。</p>
<p>随着法律规范，商业应用的陆续提上日程等一系列信息，都表明AI的发展将进入到加速阶段，那么AI究竟是何发展？让我们拭目以待吧！</p>
<p>最后还是要强调下哈，ChatGPT本身是一个现象，现象背后的人工智能趋势，才是真正最重要的。</p>
<h2 id="更多"><a class="markdownIt-Anchor" href="#更多"></a> 更多</h2>
<blockquote>
<p>人工智能的两个条件：<br />
1、有内在规律，有概率的、不能百分百保证预测正确。<br />
2、可采集数据，可以做随机数据获取大量机器学习的基础。</p>
</blockquote>
<blockquote>
<p>人工智能的两个过程：<br />
1、训练：从老数据中挖掘数据的规律。<br />
2、预测：讲挖掘到的规律运用到新数据中。</p>
</blockquote>
<blockquote>
<p>人工智能优势与劣势：<br />
1、强项：规则比较模糊的场景<br />
2、弱项：规则比较清晰的场景</p>
</blockquote>
<blockquote>
<p>初入人工智能项目流程：<br />
1、确认好输入输出<br />
2、根据输入输出，采集数据<br />
3、遴选算法，完成训练<br />
4、模型部署，上线推理</p>
</blockquote>
<p>加减乘除不适合人工智能来做，计算器来算才是百分百正确。</p>
<p><strong>人工智能就是拥有“人”的特点。</strong></p>
<p><img src="/images/chatGPT5.jpg" alt="img" /><br />
<img src="/images/chatGPT6.jpg" alt="img" /></p>
]]></content>
      <categories>
        <category>人工智能</category>
        <category>chatGPT</category>
      </categories>
      <tags>
        <tag>人工智能</tag>
        <tag>chatGPT</tag>
      </tags>
  </entry>
  <entry>
    <title>描述统计及推断统计</title>
    <url>/2023/02/07/%E6%8F%8F%E8%BF%B0%E7%BB%9F%E8%AE%A1%E5%8F%8A%E6%8E%A8%E6%96%AD%E7%BB%9F%E8%AE%A1/</url>
    <content><![CDATA[<h1 id="什么是统计学"><a class="markdownIt-Anchor" href="#什么是统计学"></a> 什么是统计学</h1>
<p>首先统计学是数据分析师必走的一条道路，它可以从科学的角度上说明数的收集、处理、分析和解释，并从数据中得出结论。当然最先遇到的难题就是映入眼前的一大堆让人懵逼的复杂数学公式，直接让人还没开始就直接开摆，但实际学习下来过后发现统计学就在我们身边也没有那么的难，也不一定要会很多公式的推导，我们首先是先理解，从应用层面上，然后再慢慢深入研究，知道他并且会用是我们的第一步，我们先将个最通俗易懂的例子：</p>
<blockquote>
<p>案例1：假设一家公司的老板说自己公司平均工资在20000左右，你是不是很心动？但实际上可能老板 60000 张三 6000 李四<br />
8000 王五 5000 所以你去过可能也就是5000～7000的水平可见这个坑有多深。<br />
案例二：2019年国家统计局发布的工资数据中提到：信息传输、软件和信息技术服务业平均工资得以快速增⻓，2019年平均工资为122478元，比上年增⻓9.3%</p>
</blockquote>
<p><img src="/images/%E6%8F%8F%E8%BF%B0%E7%BB%9F%E8%AE%A1%E5%8F%8A%E6%8E%A8%E6%96%AD%E7%BB%9F%E8%AE%A11.jpg" alt="img" /></p>
<p>这么看是不是发现统计学他时时刻刻都在我们身边？将他啃下，我们也能当一名会做生意的老板。<br />
大概讲明白了统计学的的例子，我们继续把统计学中两个重要的分支：描述统计和推断统计，在拿出来说说。</p>
<h2 id="描述统计"><a class="markdownIt-Anchor" href="#描述统计"></a> 描述统计</h2>
<ul>
<li>将一系列复杂数据，减少为几个能起到描述作用的数字（均值，中位数等），用这些有代表性的数字来代表整个数字集。然后还可以将代表性数据图形化/可视化，可以更直观的了解数据，从而用数据解释问题。</li>
<li>例如：说一下班级这次考试的情况如何</li>
</ul>
<p>那描述统计中又有：</p>
<ul>
<li>集中描述统计</li>
<li>离散趋势统计</li>
</ul>
<p>下面先讲解下集中描述统计和离散趋势统计</p>
<h3 id="集中描述统计"><a class="markdownIt-Anchor" href="#集中描述统计"></a> 集中描述统计</h3>
<p><strong>反映数据向其中心值靠拢或聚集的程度</strong></p>
<h4 id="均数"><a class="markdownIt-Anchor" href="#均数"></a> 均数</h4>
<p>描述一组数据在数量上的平均水平，主要用于数值型数据</p>
<ul>
<li>均数的优点：
<ul>
<li>高度浓缩了数据的精华，使大量的观测数据转变成一个代表性的数值；比较敏感，数据任何一个值发生变化，均数都会随之改变。</li>
<li>大家熟知、都比较喜欢用、便于比较和传播。</li>
</ul>
</li>
<li>均数的缺点：
<ul>
<li>大锅饭，把各个观测数据之间的差异性掩盖了</li>
<li>均数受极值的影响很大。</li>
<li>上文提到的平均工资的事情，就是均值的缺点造成的</li>
</ul>
</li>
<li>均数的使用范围
<ul>
<li>对称分布，特别是正态分布的数据比较适用，但是对于极端性数据均数绝对不适用</li>
</ul>
</li>
<li>pandas计算均值：</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df.mean(axis=<span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<h4 id="中位数"><a class="markdownIt-Anchor" href="#中位数"></a> 中位数</h4>
<p>主要用于顺序型数据。将全体数据从小到大排列，在整个数列中处于中间位置的那个值就是中位数。个数为奇数的中位数，根据位置取中间的那个数即可。个数为偶数的中位数，就是中间两个数值的均值。</p>
<ul>
<li>中位数的优点
<ul>
<li>不受极端值的影响，在具有个别极大或极小值的分布数列中，中位数比均数更具有代表性，如上面例子，用中位数则是4500，至少代表了前三个人的工资水平</li>
</ul>
</li>
<li>中位数的缺点
<ul>
<li>损失信息，只考虑居中位置，其他变量值比中位数大多少或小多少，它无法反映出来，所以我们也是只能看到部分信息。</li>
</ul>
</li>
<li>中位数的应用场景：
<ul>
<li>对于对称性的数据，优先均数，仅仅对于均数不能使用的情况才使用中位数加以描述。</li>
<li>在描述数据的时候，我们通常会通过平均数与中位数来认识数据。但有些时候，哪怕我们准确无误的计算出了平均数，也无法改变中位数在对真相的描述中更加准备这个事实，为什么这么说呢？
<ul>
<li>首先，我们关心的多大数现象都可以用多种方式进行描述。但同样的，当我们在对同一事物进行描述的时候，我们说的话（选用的数据）便会影响别人对此事的印象。</li>
<li>比如3、4、5、6、102这5个数字，它们的平均数是24，而中位数是5。很明显，24和5之间存在明显的差距。有些时候，你想让整体的数字看起来更大，就用平均数。如果你想让整体数字看起来更小，那就用中位数。这时，就很容易误导看数据的人。因为一看到你的平均数这么大，很自然的就会认为你的东⻄不错。其实不是的。因为这组数据的平均数之所以这么大，完全是因为102这个极值拉大了整体的均值，所以平均数看起来还错。只是这样的话，便会对数据产生一定的误解。因此，从这个⻆度出发，当我们要准确的认识数据的时候，要尽可能避免使用平均数来作为判断对象好坏的唯一标准，我们得加入中位数数据，使得结论更加准确。</li>
</ul>
</li>
</ul>
</li>
<li>pandas计算中位数/四分位数：</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df = DataFrame(data=np.random.randint(<span class="number">0</span>,<span class="number">100</span>,size=(<span class="number">3</span>,<span class="number">5</span>)))</span><br><span class="line">df.median(axis=<span class="number">1</span>) <span class="comment">#计算df中每一行的中位数，如果行数据不是有序的，</span></span><br><span class="line">则median会将其变为有序在计算中位数</span><br><span class="line">df.describe() <span class="comment">#可以将df的每一列进行统计描述</span></span><br></pre></td></tr></table></figure>
<h4 id="众数"><a class="markdownIt-Anchor" href="#众数"></a> 众数</h4>
<ul>
<li>众数是指总体中出现次数最多的标志值，简单来说就是一组数据当中，出现次数最多的那个数。在实际工作中，众数有相当广泛的应用。
<ul>
<li>例如，市场上某种商品一天的价格可能有多次变化，可不必全面登记该商品的全部价格来计算其算术平均数，而只需用该商品成交量最多的那个价格即众数作为代表值，就可以反映出该商品价格的一般水平。</li>
<li>又如，在大批量生产的男式皮鞋中有多种尺码，其中40码的销售量最多，这说明40码就是众数，可代表男式皮鞋尺码的一般水平，宜大量生产，而其余尺码的生产量就要相应少一些，这样才能满足市场上大部分消费者的需要。</li>
</ul>
</li>
<li>pandas计算众数：</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = Series([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])</span><br><span class="line">s.mode() <span class="comment">#众数</span></span><br></pre></td></tr></table></figure>
<h3 id="离散趋势描述"><a class="markdownIt-Anchor" href="#离散趋势描述"></a> 离散趋势描述</h3>
<h4 id="方差"><a class="markdownIt-Anchor" href="#方差"></a> 方差</h4>
<ul>
<li>案例分析：
<ul>
<li>要从甲乙两名跳远运动员中选出一名去参加运动会，为此专⻔为两人进行了10次跳远比赛，产出了两个人各自10组跳远的成绩记录。选拔标准是，先看他们的平时成绩，如果平时成绩相差无几的话，在看稳定程度。那么，就可以使用方差来衡量其稳定程度。下面来看下，如何一步一步的推导出方差。</li>
</ul>
</li>
<li>提问：如果用一组数据的平均数来代表样本平均水平的话，对个体(每个数据)而言，什么指标可以代表个体(每个数据)的离散程度大小？（一次跳远成绩距离均值的距离）
<ul>
<li>可以使用离均差：x-μ（个体偏离均值的程度）</li>
</ul>
</li>
<li>提问：可否用离均差的总和来表示整个样本的离散程度？不可以，离均差有正负之分，加和会抵消为0。那怎么办，怎么解决正负号的问题？可以<strong>使用离均差的平方和：∑(x-μ)²</strong><br />
但是：<br />
如果比较两个样本的离均差，一个样本量是10个，一个是1000个，实际上二者的离散程度是一样的，但是因为数量不同，造成平方和相加和数值差异很大，这该怎么办？</li>
<li>显然，我们发现离均差平方和的大小跟样本量有关</li>
<li>如果我们能够把离均差平方和/样本量，是不是就解决了这个问题，其实这个就是方差的概念<br />
方差：反映各数据远离其中心值的趋势<br />
pandas计算方差：</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = Series([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])</span><br><span class="line">s.var()</span><br></pre></td></tr></table></figure>
<p>标准差<br />
方差开根号就是标准差</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = Series([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])</span><br><span class="line">s.std()</span><br></pre></td></tr></table></figure>
<p>思考：<br />
一组数据携带的信息量的大小可以使用方差来衡量方差越大表示这组数据携带的信息量越大，反之越小。</p>
<ul>
<li>第一组数据：9, 9.1, 9.01, 8.99， 9.1 方差几乎为0</li>
<li>第二组数据：9 102 22 1 0.8 方差较大</li>
</ul>
<h2 id="推断统计"><a class="markdownIt-Anchor" href="#推断统计"></a> 推断统计</h2>
<p>是研究如何利用样本数据来推断总体特征的统计方法。推断统计其实是建立在描述统计的基础之上，在对总体数据有了大致的了解之后，运用一些分析方法，对数据进行预测，并达到统计决策的目的，其实不管是在统计学上，还是在实际的业务分析中，我们做分析的终极目的就是用来得出我们结论，应用于决策。</p>
<ul>
<li>例如：房价预测，通过预测数据来进行销售，用户看到房价走势，如果一路走高，是不是要提早下手。</li>
</ul>
<p><img src="/images/%E6%8F%8F%E8%BF%B0%E7%BB%9F%E8%AE%A1%E5%8F%8A%E6%8E%A8%E6%96%AD%E7%BB%9F%E8%AE%A12.jpg" alt="img" /></p>
<hr />
<p>看完这个篇文章的内容后是否开始一点点的了解？如果还是没有了解也没关系，我们更多的是要了解如何应用进pandas当中，学习他们在分析中的作用，来帮助我们更好的完成所需要的工作。</p>
<p>之后我会找时间讲述下统计学中的几个概念，二项分布和正太分布，拜~</p>
]]></content>
      <categories>
        <category>数据分析</category>
        <category>统计学</category>
      </categories>
      <tags>
        <tag>统计学</tag>
        <tag>基础</tag>
        <tag>描述统计</tag>
        <tag>推断统计</tag>
      </tags>
  </entry>
  <entry>
    <title>数据分析之Excel</title>
    <url>/2023/02/05/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B9%8BExcel/</url>
    <content><![CDATA[<p>在一个数据驱动运营、数据决定对策、数据改变未来的时代。无论是海量数据库，还是一张简单的表格，都能进一步挖掘数据价值、活用数据。在众多数据分析工具中，Excel 是最常用，也是最容易上手的分析工具。<br />
<img src="/images/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B9%8BExcel1.jpg" alt="img" /><br />
Excel 数据分析功能十分强大，不仅提供简单的数据处理功能，还有专业的数据分析工具库，包括相关系数分析、描述统计分析等。</p>
<h2 id="为什么选择用excel"><a class="markdownIt-Anchor" href="#为什么选择用excel"></a> 为什么选择用Excel？</h2>
<p>1.Excel是非常常见普遍存在的工具不仅能完成日常常见的大部分内容，同时也是便捷的数据分析工具。功能非常强大有数据统计、函数计算、数据透视表、图表等功能。可以满足一般的数据分析需求。<br />
2.Excel简单易学。对于初学者来说，Excel从入门到精通，只要你每天花点时间学习及练习，一个月就可以掌握。<br />
3.做为office三剑客之一，Excel、Word、PPT的江湖地位是无可撼动的。 当然还有更多更专业的数据分析软件如Spss、Python等，也可以实现数据分析。 另外越来越多的公司建立了BI报表体系，用来做数据分析和展示，当然这个是需要一定的资金支持。</p>
<p>是的，就是你看不起的Excel，它能完成的大部分的事情包含但不限于：</p>
<blockquote>
<ul>
<li>数据清洗（完整、合法、唯一）</li>
<li>描述性统计分析（数据表现一秒生成）</li>
<li>变化和趋势分析（多维度分析、交叉分析）</li>
<li>回归和预测（数据之间内在关系有多可信）</li>
</ul>
</blockquote>
<h2 id="excel做数据分析方法"><a class="markdownIt-Anchor" href="#excel做数据分析方法"></a> Excel做数据分析方法</h2>
<p><img src="/images/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B9%8BExcel3.jpg" alt="img" /></p>
<h3 id="准备数据并生成透视表"><a class="markdownIt-Anchor" href="#准备数据并生成透视表"></a> 准备数据并生成透视表</h3>
<p>在excel数据中，将清洗完成的数据选中→插入→数据透视表，把地区、省份（需要汇总的维度）放到行，利润、销售额（需要汇总的数值）放到值。</p>
<h3 id="设计格式"><a class="markdownIt-Anchor" href="#设计格式"></a> 设计格式</h3>
<p>选中excel顶部菜单的设计→报表布局→已表格形式显示→分类汇总→不显示分类汇总，调整数据的展现格式</p>
<h3 id="插入切片器"><a class="markdownIt-Anchor" href="#插入切片器"></a> 插入切片器</h3>
<p>在excel顶部菜单中，找到分析→插入切片器→季度→确定。<br />
以上，数据透视表能帮我们统计数据源，切片器能帮助形成交互式报表，再通过公式提取数据生成图表。当使用切片器时，便生成了交互式图表。至此，excel做数据分析图的数据部分便做好了。</p>
<h3 id="条形图"><a class="markdownIt-Anchor" href="#条形图"></a> 条形图</h3>
<p>引用数据，用Large函数和Index+Match组合查找函数，在利润中提取排名前五和倒五的值和对应的省份，生成条形图。再选中数据→插入→查看所有图表→所有图表→条形图→簇状条形图，插入条形图。<br />
<img src="/images/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B9%8BExcel4.jpg" alt="img" /></p>
<h3 id="瀑布图"><a class="markdownIt-Anchor" href="#瀑布图"></a> 瀑布图</h3>
<p>引用数据，用Sumif函数对各地区的利润求和，选中数据→插入→查看所有图表→所有图表→瀑布图→确定→双击总计的柱子→鼠标右键→设置为汇总，生成瀑布图。瀑布图适用于展示数据之间的演变过程，能直观看出销售额从0变化到总计的一个过程。<br />
<img src="/images/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B9%8BExcel5.jpg" alt="img" /></p>
<h3 id="树状图"><a class="markdownIt-Anchor" href="#树状图"></a> 树状图</h3>
<p>用Vlookup函数查找利润，选中数据→插入→查看所有图表→所有图表→树状图→确定，生成树状图。树状图能快速了解比重情况及各区域分布详情。7、制作图表——折线图引用数据，用Sumif函数对各月的销售额求和，用Average函数求年销售额平均值。选中数据→插入→查看所有图表→所有图表→折线图→确定，生成折线图。折线图能分析每月销售额的变化情况，通过添加平均线，能帮助分析为什么这个月销售额高，为什么那个月销售额低。</p>
<h2 id="数据分析的几点硬核经验"><a class="markdownIt-Anchor" href="#数据分析的几点硬核经验"></a> 数据分析的几点硬核经验</h2>
<ol>
<li>务必提升数据采集的效率</li>
</ol>
<p>excel重处理而弱采集，尤其在大体量的公司，跨部门收集、汇总四面八方的数据，很崩溃特别是经常需要大面积采集数据，所以数据收集经常能将自己弄奔溃。</p>
<p>所以找了一些方便我们处理的表单工具（简道云、麦客、金数据、氚云等），一圈试下来，觉得钉钉+简道云可以搭配使用，数据收集效率还是很可观地。</p>
<p>数据采集还涉及线上数据爬取，但这方面我了解不多，就不班门弄斧了。有意者可以参考这篇回答：<br />
<a href="https://www.zhihu.com/question/20899988/answer/24923424">如何入门 Python 爬虫？</a><br />
<img src="/images/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B9%8BExcel6.jpg" alt="img" /><br />
2. 业务知识大于工具选择</p>
<p>所有数据分析师都会告诉后来人“业务知识很重要”，因为大家在踩了坑之后才恍然大悟分析中遇到的很多难题问题都源于对业务的不了解。</p>
<p>例如，同样是对客户进行分析，互联网电商的客户与保险客户具有明显区别，前者重视来源，活跃度，购买率，流失率，后者关注渠道，报价，理赔风险，投诉。业务知识包括这种大方向的行业知识，也包括公司内部特殊情况，了解得越详细可以避免绕很多弯路。</p>
<p>例如，有些行为是内部人员参与造成的数据异常要提前做处理，有些业务开展是带地区特性的，分析时候要区分对待等。</p>
<p>而真正做分析时候，你会发现市面上有太多的分析工具，需要掌握的实在是太多了，其实不必纠结于此，依据个人能力，配合当前的数据分析环境，适用的工具自然会被选出。</p>
<p>数据分析过来人都会说80％的时间都在做数据处理工作其中又有80%是做数据的清洗，所以选择好并学习好相关的数据分析的工具是重中之重特别是excel一定得认真学习，重点对待。</p>
<h2 id="日常积累"><a class="markdownIt-Anchor" href="#日常积累"></a> 日常积累</h2>
<p>就如同前面所说，书本知识让我们能够对Excel的基本知识有一个框架性的认识，如过真的想成长为Excel领域的专家，还是需要日常不断地加深和巩固。</p>
<p>针对加深和巩固，一方面是需要多用，把已掌握知识从会用变更熟练。二是不断汲取新知识，这个可以通过多留意一些论坛或者学习平台，<strong>“三人行，必有我师”</strong>，从与人交流中，能够看到很多自己并不了解的Excel用法。</p>
<p><img src="/images/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B9%8BExcel2.jpg" alt="img" /></p>
<p>这里，给大家推荐2个不错的论坛，以及收集的Excel全函数表。</p>
<p><a href="https://www.excelhome.net/">Excelhome</a><br />
<a href="http://www.excelpx.com/">Excel精英论坛</a><br />
<a href="https://www.ocexa.cn:10003/d/s/734967737417211928/IxagvuBhy9eusNurwcIeusd2ypJ4xiNw-GSBgj1whMwo_">Excel函数表</a></p>
]]></content>
      <categories>
        <category>数据分析</category>
        <category>Excel</category>
      </categories>
      <tags>
        <tag>数据分析</tag>
        <tag>Excel</tag>
        <tag>数据可视化</tag>
      </tags>
  </entry>
</search>
